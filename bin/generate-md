#!/usr/bin/env node
var fs = require('fs'),
    path = require('path'),
    List = require('minitask').list,
    runner = require('../lib/runner.js');

var args = require('argsparser').parse(),
    cwd = process.cwd();

if(args['--layouts']) {
  // show layouts
  console.log('Available layouts:\n'+
      fs.readdirSync(__dirname+'/../layouts/')
        .sort(function(a, b) { return a.localeCompare(b); })
        .map(function(name) { return '\t' + name})
        .join('\n')
    );
  process.exit();
}

// Load the layout
var layoutDir = __dirname + '/../layouts/',
    layout = args['--layout'] || 'jasonm23-markdown',
    input = path.normalize(args['--input'] || './input/'),
    output = path.normalize(args['--output'] || './output/'),
    template = path.normalize(path.resolve(cwd, layout));

// template is one of:
if(fs.existsSync(template)) {
  // 1) the supplied argument (normalized)
} else if(fs.existsSync(layoutDir+layout+'/page.html')) {
  // 2) a preset layout from the layout dir
  template = path.normalize(layoutDir+layout+'/page.html');
} else {
  // 3) the default layout
  template = path.normalize(layoutDir+'plain/page.html');
}

if(!fs.existsSync(input)) {
  console.log(input+' does not exist');
  process.exit();
}

console.log('Layout: ' + layout);
console.log('Template file: ' + template);
console.log('Input: ' + input);
console.log('Output: ' + path.relative(cwd, output));

var list = new List(),
    eachFn;

list.add(input);

if(args['--each'] && fs.existsSync(args['--each'])) {
  eachFn = require(args['--each']);
}

runner(list, {
  output: output,
  layout: path.dirname(template) + path.sep,
  template: template,
  defaultMeta: {
    title: 'example'
  },
  eachFn: eachFn
});
